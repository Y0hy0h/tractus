WHITESPACE = _{ " " | "\t" }
file = { SOI ~ row ~ (NEWLINE ~ row?)* ~ EOI }
row = _{ WHITESPACE* ~ statement ~ WHITESPACE* }
statement = { (assignment | library | expression)? ~ comment? }

assignment = { expression ~ ("<-" | "=") ~ expression}
comment = @{ "#" ~ character* }
character = _{ !NEWLINE ~ ANY }
empty = @{ "" }

// Take care to prevent left recursion. See https://math.stackexchange.com/a/140049
expression = ${ non_indexing ~ indexing* }
non_indexing = _{ function | formula | identifier | constant  } // Terminates
indexing = _{ (column | index) } // Recursive
column = !{ "$" ~ identifier }
index = !{ "[" ~ expression? ~ ("," ~ expression)* ~ "]" }

identifier = @{ !(ASCII_DIGIT | "_" | "." ~ ASCII_DIGIT) ~ identifier_character+ }
identifier_character = _{ ASCII_ALPHANUMERIC | "." | "_" }

constant = ${ number | string }
number = @{ ASCII_DIGIT+ }
string = @{ "\"" ~ ( "\\\"" | !"\"" ~ ANY )* ~ "\"" | "'" ~ ( "\\'" | !"'" ~ ANY )* ~ "'"}

function = !{ identifier ~ "(" ~ arguments ~ ")" }
arguments = { argument? ~ ("," ~ argument)* }
argument = _{ named_argument | unnamed_argument }
named_argument = { identifier ~ "=" ~ expression }
unnamed_argument = { expression }

library = { "library(" ~ identifier ~ ")"}

formula = !{ one_sided | two_sided }
one_sided = { "~" ~ formula_right_side }
two_sided = { identifier? ~ "~" ~ formula_right_side }
formula_right_side = _{ identifier ~ (formula_operator ~ identifier)* }
formula_operator = { "+" }